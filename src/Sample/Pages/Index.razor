@page "/"

<div class="container-fluid">
    <p>
        Numeric
    </p>
    <p>
        <NumericTextBox @bind-Value="Numeric" Format="###,##0.00"
                        Style="max-width:20em;"
                        NumberChanged="NumericHasChanged"></NumericTextBox>
    </p>
    <p>
        Numeric (not binded)
    </p>
    <p>
        <NumericTextBox Format="###,##0.00"
                        Style="max-width:20em;"
                        @ref="NumericRef"></NumericTextBox>
    </p>
    <p>
        Money
    </p>
    <p>
        <NumericTextBox @bind-value="Money" Format="C4"
                        Style="max-width:20em;"
                        ConditionalFormatting="FormatMoney"
                        SelectOnEntry="true"></NumericTextBox>
    </p>
    <p>
        <button class="btn btn-primary" @onclick="SetValueRef">Set value by reference</button>
    </p>
    <p>
        <button class="btn btn-primary" @onclick="SetValueProp">Set value by updating value</button>
    </p>
    <p>
        Numeric: @Numeric
    </p>
    <p>
        Money: @Money
    </p>
    <p>
        @((MarkupString)TimesChanged)
    </p>
</div>

@code
{
    decimal Numeric { get; set; }
    decimal Money { get; set; } = -1340.77m;
    string TimesChanged = "";

    BlazorNumericTextBox.NumericTextBox NumericRef;

    string FormatMoney(decimal value)
    {
        // Class to add to the tag
        return value < 0 ? "text-danger" : "";
    }

    void NumericHasChanged()
    {
        TimesChanged += "<p>Changed on " + DateTime.Now + "</p>";
    }

    async Task SetValueRef()
    {
        await NumericRef.SetValue(128.30m);
    }

    void SetValueProp()
    {
        Numeric = 4999;
        Money = -4877.15m;
    }
}